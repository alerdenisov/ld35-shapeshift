//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.PoolsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

public static class Pools {

    static Pool[] _allPools;

    public static Pool[] allPools {
        get {
            if (_allPools == null) {
                _allPools = new [] { game, system };
            }

            return _allPools;
        }
    }

    static Pool _game;

    public static Pool game {
        get {
            if (_game == null) {
                _game = new Pool(GameComponentIds.TotalComponents, 0, new PoolMetaData("Game Pool", GameComponentIds.componentNames, GameComponentIds.componentTypes));
                #if (!ENTITAS_DISABLE_VISUAL_DEBUGGING && UNITY_EDITOR)
                if (UnityEngine.Application.isPlaying) {
                    var poolObserver = new Entitas.Unity.VisualDebugging.PoolObserver(_game);
                    UnityEngine.Object.DontDestroyOnLoad(poolObserver.entitiesContainer);
                }
                #endif
            }

            return _game;
        }
    }

    static Pool _system;

    public static Pool system {
        get {
            if (_system == null) {
                _system = new Pool(SystemComponentIds.TotalComponents, 0, new PoolMetaData("System Pool", SystemComponentIds.componentNames, SystemComponentIds.componentTypes));
                #if (!ENTITAS_DISABLE_VISUAL_DEBUGGING && UNITY_EDITOR)
                if (UnityEngine.Application.isPlaying) {
                    var poolObserver = new Entitas.Unity.VisualDebugging.PoolObserver(_system);
                    UnityEngine.Object.DontDestroyOnLoad(poolObserver.entitiesContainer);
                }
                #endif
            }

            return _system;
        }
    }
}