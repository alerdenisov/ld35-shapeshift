//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {
    public partial class Entity {
        public ShapeTetris.Components.Rotation rotation { get { return (ShapeTetris.Components.Rotation)GetComponent(GameComponentIds.Rotation); } }

        public bool hasRotation { get { return HasComponent(GameComponentIds.Rotation); } }

        public Entity AddRotation(UnityEngine.Vector3 newLocalEuler) {
            var component = CreateComponent<ShapeTetris.Components.Rotation>(GameComponentIds.Rotation);
            component.LocalEuler = newLocalEuler;
            return AddComponent(GameComponentIds.Rotation, component);
        }

        public Entity ReplaceRotation(UnityEngine.Vector3 newLocalEuler) {
            var component = CreateComponent<ShapeTetris.Components.Rotation>(GameComponentIds.Rotation);
            component.LocalEuler = newLocalEuler;
            ReplaceComponent(GameComponentIds.Rotation, component);
            return this;
        }

        public Entity RemoveRotation() {
            return RemoveComponent(GameComponentIds.Rotation);
        }
    }
}

    public partial class GameMatcher {
        static IMatcher _matcherRotation;

        public static IMatcher Rotation {
            get {
                if (_matcherRotation == null) {
                    var matcher = (Matcher)Matcher.AllOf(GameComponentIds.Rotation);
                    matcher.componentNames = GameComponentIds.componentNames;
                    _matcherRotation = matcher;
                }

                return _matcherRotation;
            }
        }
    }
