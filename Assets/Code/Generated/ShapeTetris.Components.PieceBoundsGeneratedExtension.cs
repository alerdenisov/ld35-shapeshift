//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {
    public partial class Entity {
        public ShapeTetris.Components.PieceBounds pieceBounds { get { return (ShapeTetris.Components.PieceBounds)GetComponent(GameComponentIds.PieceBounds); } }

        public bool hasPieceBounds { get { return HasComponent(GameComponentIds.PieceBounds); } }

        public Entity AddPieceBounds(ShapeTetris.Models.Vector3i newSize, ShapeTetris.Models.Vector3i newOffset) {
            var component = CreateComponent<ShapeTetris.Components.PieceBounds>(GameComponentIds.PieceBounds);
            component.Size = newSize;
            component.Offset = newOffset;
            return AddComponent(GameComponentIds.PieceBounds, component);
        }

        public Entity ReplacePieceBounds(ShapeTetris.Models.Vector3i newSize, ShapeTetris.Models.Vector3i newOffset) {
            var component = CreateComponent<ShapeTetris.Components.PieceBounds>(GameComponentIds.PieceBounds);
            component.Size = newSize;
            component.Offset = newOffset;
            ReplaceComponent(GameComponentIds.PieceBounds, component);
            return this;
        }

        public Entity RemovePieceBounds() {
            return RemoveComponent(GameComponentIds.PieceBounds);
        }
    }
}

    public partial class GameMatcher {
        static IMatcher _matcherPieceBounds;

        public static IMatcher PieceBounds {
            get {
                if (_matcherPieceBounds == null) {
                    var matcher = (Matcher)Matcher.AllOf(GameComponentIds.PieceBounds);
                    matcher.componentNames = GameComponentIds.componentNames;
                    _matcherPieceBounds = matcher;
                }

                return _matcherPieceBounds;
            }
        }
    }
