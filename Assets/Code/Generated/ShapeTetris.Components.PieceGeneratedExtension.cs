//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {
    public partial class Entity {
        public ShapeTetris.Components.Piece piece { get { return (ShapeTetris.Components.Piece)GetComponent(GameComponentIds.Piece); } }

        public bool hasPiece { get { return HasComponent(GameComponentIds.Piece); } }

        public Entity AddPiece(ShapeTetris.Models.PieceDot[] newDots) {
            var component = CreateComponent<ShapeTetris.Components.Piece>(GameComponentIds.Piece);
            component.Dots = newDots;
            return AddComponent(GameComponentIds.Piece, component);
        }

        public Entity ReplacePiece(ShapeTetris.Models.PieceDot[] newDots) {
            var component = CreateComponent<ShapeTetris.Components.Piece>(GameComponentIds.Piece);
            component.Dots = newDots;
            ReplaceComponent(GameComponentIds.Piece, component);
            return this;
        }

        public Entity RemovePiece() {
            return RemoveComponent(GameComponentIds.Piece);
        }
    }
}

    public partial class GameMatcher {
        static IMatcher _matcherPiece;

        public static IMatcher Piece {
            get {
                if (_matcherPiece == null) {
                    var matcher = (Matcher)Matcher.AllOf(GameComponentIds.Piece);
                    matcher.componentNames = GameComponentIds.componentNames;
                    _matcherPiece = matcher;
                }

                return _matcherPiece;
            }
        }
    }
